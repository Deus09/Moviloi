// AÃ‡IKLAMA: Bu dosya, Supabase ile baÄŸlantÄ± kuran tek bir client (istemci) oluÅŸturur ve
// projenin her yerinden bu client'a eriÅŸmemizi saÄŸlar. Bu, kod tekrarÄ±nÄ± Ã¶nler
// ve baÄŸlantÄ±yÄ± tek bir yerden yÃ¶netmemize olanak tanÄ±r.

import { createClient } from '@supabase/supabase-js';

// .env dosyasÄ±ndan API URL ve anon key'i alÄ±yoruz.
// import.meta.env, Vite'Ä±n ortam deÄŸiÅŸkenlerine eriÅŸme yÃ¶ntemidir.
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Debug iÃ§in environment deÄŸiÅŸkenlerini kontrol et
console.log('ðŸ”§ Supabase URL:', supabaseUrl ? 'SET' : 'NOT SET');
console.log('ðŸ”§ Supabase Anon Key:', supabaseAnonKey ? 'SET' : 'NOT SET');

// Supabase client'Ä±nÄ± oluÅŸturup dÄ±ÅŸa aktarÄ±yoruz.
// ArtÄ±k projenin herhangi bir yerinde Supabase'e eriÅŸmek istediÄŸimizde,
// bu 'supabase' nesnesini import etmemiz yeterli olacak.
export const supabase = createClient(supabaseUrl, supabaseAnonKey);

export const signInWithGoogle = async () => {
  // Dinamik origin kullan (port otomatik tespit)
  const redirectUrl = `${window.location.origin}/auth/callback`;
  
  console.log('ðŸ”— OAuth redirect URL (supabaseClient):', redirectUrl);
  
  const { data, error } = await supabase.auth.signInWithOAuth({
    provider: 'google',
    options: {
      redirectTo: redirectUrl
    }
  });
  
  if (error) {
    console.error('Google sign in error:', error);
    throw error;
  }
  
  return data;
};

// KullanÄ±cÄ± durumunu kontrol etmek iÃ§in yardÄ±mcÄ± fonksiyon
export const getCurrentUser = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session?.user || null;
};

// KullanÄ±cÄ± session'Ä±nÄ± kontrol et
export const getSession = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session;
};

// Ã‡Ä±kÄ±ÅŸ yapma fonksiyonu
export const signOut = async () => {
  const { error } = await supabase.auth.signOut();
  if (error) {
    console.error('Sign out error:', error);
    throw error;
  }
};